/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.greenlab.view;

import com.greenlab.controller.CustomerController;
import com.greenlab.controller.InvoiceController;
import com.greenlab.controller.PaymentController;
import com.greenlab.controller.ResivedPaymentController;
import com.greenlab.model.Customer;
import com.greenlab.model.Invoice;
import com.greenlab.model.Payment;
import com.greenlab.model.ResivedPayment;
import com.mysql.jdbc.util.ServerController;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zeonit
 */
public class PaymetForm extends javax.swing.JPanel {

    PaymentController paymentController;
    DefaultTableModel dtm;
    InvoiceController invoiceController;
    CustomerController customerController;
    ResivedPaymentController resivedPaymentController;
    Date d = new Date();

    /**
     * Creates new form PaaymetForm
     */
    public PaymetForm() {
        initComponents();
        LoadPaymentTable();
        //   loadData(1);
        loadCustomer();
        custIdtxt.hide();
        amountCopytxt.hide();
        paidAmountCopytxt.hide();

        cashRadioButton.setSelected(true);
        cheqNotxt.setEnabled(false);
        cheqNoLable.setEnabled(false);
        cheqNotxt.setText("cash");
        paymentidTxt.setEditable(false);
        CustomerTxt.setEditable(false);
        inoiceidTxt.setEditable(false);
        dateChoser.setDate(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        paymentidTxt = new javax.swing.JTextField();
        inoiceidTxt = new javax.swing.JTextField();
        amountTxt = new javax.swing.JTextField();
        paidmountTxt = new javax.swing.JTextField();
        balanceTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateChoser = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        InvoiceViewTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        customerCombo = new javax.swing.JComboBox<>();
        custIdtxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        resivedPTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        cashRadioButton = new javax.swing.JRadioButton();
        cheqRadioButton = new javax.swing.JRadioButton();
        cheqNoLable = new javax.swing.JLabel();
        cheqNotxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        CustomerTxt = new javax.swing.JTextField();
        amountCopytxt = new javax.swing.JLabel();
        paidAmountCopytxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Payment");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 206, 26));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Payment Id          :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 100, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Date                       :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Amount                 :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Paid Amount        :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, -1, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Balance                 :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 99, 20));

        paymentidTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentidTxtActionPerformed(evt);
            }
        });
        add(paymentidTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 140, -1));

        inoiceidTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inoiceidTxtKeyPressed(evt);
            }
        });
        add(inoiceidTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 140, -1));
        add(amountTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 140, -1));

        paidmountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidmountTxtActionPerformed(evt);
            }
        });
        add(paidmountTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 140, -1));
        add(balanceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 140, -1));

        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment Id", "Invoice Id", "Date", "Aamount", "Paid Amount", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paymentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(paymentTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 431, 880, 90));

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 70, -1));

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 80, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setText("Payment List");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 89, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Invoice Id             :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 100, 20));
        add(dateChoser, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 140, 22));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Customer Name :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 61, -1, 20));

        InvoiceViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice  Id", "Date", "netTotal", "Total", "TotalDiscount", "Customer", "Customer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InvoiceViewTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InvoiceViewTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(InvoiceViewTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 610, 104));

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel10.setText("Invoice List");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 94, -1));

        customerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerComboActionPerformed(evt);
            }
        });
        add(customerCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 61, 161, -1));
        add(custIdtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 70, -1));

        resivedPTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "CheqNo", "Date", "customer Id", "Paid Amount", "Invoice Id", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resivedPTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resivedPTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(resivedPTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 610, 120));

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setText("Received List");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 80, -1));

        cashRadioButton.setText("Cash");
        cashRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashRadioButtonActionPerformed(evt);
            }
        });
        add(cashRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        cheqRadioButton.setText("cheque");
        cheqRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheqRadioButtonActionPerformed(evt);
            }
        });
        add(cheqRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        cheqNoLable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cheqNoLable.setText("cheque No            :");
        add(cheqNoLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 100, 20));

        cheqNotxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheqNotxtActionPerformed(evt);
            }
        });
        add(cheqNotxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 140, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Customer Id         :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 100, 20));
        add(CustomerTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 140, -1));
        add(amountCopytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 110, 20));
        add(paidAmountCopytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 100, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void paymentidTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentidTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentidTxtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean isAdded = false;
        boolean isAdd = false;
        paymentController = new PaymentController();
        resivedPaymentController = new ResivedPaymentController();
        customerController = new CustomerController();
        invoiceController = new InvoiceController();

        Integer invoice_id = Integer.parseInt(inoiceidTxt.getText());
        // Invoice invoice = invoiceController.searchInvoice(invoice_id);
        String cheqNo = cheqNotxt.getText();
        Date date = dateChoser.getDate();
        Integer cusid = Integer.parseInt(CustomerTxt.getText());
        //Customer customer=customerController.searchCustomer(cusid);
        Double amount = Double.parseDouble(amountTxt.getText());
        Double paidAmount = Double.parseDouble(paidmountTxt.getText());
        Double balance = Double.parseDouble(balanceTxt.getText());
        Payment payment = new Payment(invoice_id, cheqNo, date, amount, paidAmount, balance);

        isAdded = paymentController.addPayment(payment);
        if (isAdded) {
            JOptionPane.showMessageDialog(this, "payment add");
            LoadPaymentTable();
        }

        Invoice invoice = invoiceController.searchInvoice(invoice_id);
        Customer customer = customerController.searchCustomer(cusid);

        ResivedPayment rp = new ResivedPayment(cusid, date, cheqNo, paidAmount, customer, invoice, balance);
        isAdd = resivedPaymentController.addResivedPayment(rp);
        if (isAdd) {
            JOptionPane.showMessageDialog(this, "Resived add");
            resivedPaymentTable();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        boolean isAdedd = false;
        boolean isadd = false;
        Double x = Double.parseDouble(paidAmountCopytxt.getText());
        paymentController = new PaymentController();
        Integer id = Integer.parseInt(paymentidTxt.getText());
        String cheqNo = cheqNotxt.getText();
        Date date = dateChoser.getDate();

        Double amount = Double.parseDouble(amountCopytxt.getText());

        Double paidAmount = Double.parseDouble(paidmountTxt.getText());

        System.out.println("********");
        paidAmount = paidAmount + x;

        Double balance = Double.parseDouble(balanceTxt.getText());

        Integer invoice_id = Integer.parseInt(inoiceidTxt.getText());

        Payment payment = new Payment(id, invoice_id, cheqNo, date, amount, paidAmount, balance);
        isAdedd = paymentController.updatePayment(payment);
        if (isAdedd) {
            JOptionPane.showMessageDialog(this, "Upadte Success");
        }

        ///***Add Resivedpayment*****
        Invoice invoice = invoiceController.searchInvoice(invoice_id);

        Integer custId = Integer.parseInt(CustomerTxt.getText());
        Customer customer = customerController.searchCustomer(custId);

        ResivedPayment rp = new ResivedPayment(custId, date, cheqNo, paidAmount, customer, invoice, balance);
        isadd = resivedPaymentController.addResivedPayment(rp);
        if (isadd) {
            JOptionPane.showMessageDialog(this, "Add Resived Payment");
            resivedPaymentTable();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void inoiceidTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inoiceidTxtKeyPressed

    }//GEN-LAST:event_inoiceidTxtKeyPressed

    private void customerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerComboActionPerformed
        if (customerCombo.getSelectedItem() != "None") {
            customerController = new CustomerController();
            invoiceController = new InvoiceController();
            resivedPaymentController = new ResivedPaymentController();
            paymentController = new PaymentController();

            String custName = customerCombo.getSelectedItem().toString();

            Customer customer = customerController.getByName(custName);

            List<Invoice> invoices = invoiceController.searchByCustomerId(customer.getId());
        
            if (invoices != null) {
                dtm = (DefaultTableModel) InvoiceViewTable.getModel();
                dtm.setRowCount(0);
                for (Invoice invoice : invoices) {
                    Object[] rowData = {invoice.getInvoice_id(), invoice.getDate(), invoice.getNetTotal(), invoice.getTotal(), invoice.getTotalDiscount(), invoice.getCustomer().getId(), invoice.getCustomer().getName()};
                    dtm.addRow(rowData);
                }
            }

            List<ResivedPayment>resivedPayments = resivedPaymentController.searchResivedPayment(customer.getId());
            if (resivedPayments != null) {
                dtm = (DefaultTableModel) resivedPTable.getModel();
                dtm.setRowCount(0);
                for (ResivedPayment resivedPayment : resivedPayments) {

                    Object[] rowData = {resivedPayment.getId(), resivedPayment.getCheqNo(), resivedPayment.getDate(), resivedPayment.getCustomer().getId(), resivedPayment.getAmount(), resivedPayment.getInvoice().getInvoice_id(), resivedPayment.getBalance()};
                    dtm.addRow(rowData);
                }

            }

        }

    }//GEN-LAST:event_customerComboActionPerformed

    private void paidmountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidmountTxtActionPerformed
        Double amount = Double.parseDouble(amountTxt.getText());
        Double paidAmount = Double.parseDouble(paidmountTxt.getText());
        Double balance = amount - paidAmount;
        balanceTxt.setText(String.valueOf(balance));
    }//GEN-LAST:event_paidmountTxtActionPerformed

    private void InvoiceViewTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InvoiceViewTableMouseClicked
        dtm = (DefaultTableModel) InvoiceViewTable.getModel();
        if (evt.getClickCount() == 2) {
            int row = InvoiceViewTable.getSelectedRow();
            String id = dtm.getValueAt(row, 0).toString();
            String netTotal = dtm.getValueAt(row, 2).toString();
            String cutid = dtm.getValueAt(row, 5).toString();

            inoiceidTxt.setText(id);
            amountTxt.setText(netTotal);
            CustomerTxt.setText(cutid);

            //////  Loard data payment table for invoice 
            Integer invoiceid = Integer.parseInt(id);
            List<Payment> payments = paymentController.searchPaymentwithInvId(invoiceid);

            if (payments != null) {
                dtm = (DefaultTableModel) paymentTable.getModel();
                dtm.setRowCount(0);

                for (Payment payment : payments) {
                    Object[] rowData = {payment.getId(), payment.getInvoice_id(), payment.getDate(), payment.getAmount(), payment.getPaidAmount(), payment.getBalance()};
                    dtm.addRow(rowData);
                }
            }
        }
    }//GEN-LAST:event_InvoiceViewTableMouseClicked

    private void paymentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentTableMouseClicked
        dtm = (DefaultTableModel) paymentTable.getModel();
        if (evt.getClickCount() == 2) {
            int row = paymentTable.getSelectedRow();
            String id = dtm.getValueAt(row, 0).toString();
            String invoicid = dtm.getValueAt(row, 1).toString();
            Date date = (Date) dtm.getValueAt(row, 2);
            String amount = dtm.getValueAt(row, 3).toString();
            String balance = dtm.getValueAt(row, 5).toString();
            String paidAmount = dtm.getValueAt(row, 4).toString();

            paymentidTxt.setText(id);
            inoiceidTxt.setText(invoicid);
            dateChoser.setDate(date);
            amountCopytxt.setText(amount);
            paidAmountCopytxt.setText(paidAmount);
            amountTxt.setText(balance);

        }


    }//GEN-LAST:event_paymentTableMouseClicked

    private void resivedPTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resivedPTableMouseClicked
//        dtm = (DefaultTableModel) resivedPTable.getModel();
//        if(evt.getClickCount()==2){
//            int row =resivedPTable.getSelectedRow();
//            String custid = dtm.getValueAt(row, 3).toString();
//            String invoicid = dtm.getValueAt(row, 5).toString();
//            String balance = dtm.getValueAt(row, 6).toString();
//            
//            CustomerTxt.setText(custid);
//            inoiceidTxt.setText(invoicid);
//            amountTxt.setText(balance);
//            
//           
//                
//            }
//           Integer Amount = Integer.parseInt(amountTxt.getText());
//            if(Amount ==0){
//                paidmountTxt.setEnabled(true);
//                balanceTxt.setEnabled(true);
//                
//            
//        }

    }//GEN-LAST:event_resivedPTableMouseClicked

    private void cheqRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheqRadioButtonActionPerformed
        if (cheqRadioButton.isSelected()) {
            cashRadioButton.setSelected(false);
            cheqNoLable.setEnabled(true);
            cheqNotxt.setEnabled(true);
            cheqNotxt.setText("");
        }
    }//GEN-LAST:event_cheqRadioButtonActionPerformed

    private void cheqNotxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheqNotxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheqNotxtActionPerformed

    private void cashRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashRadioButtonActionPerformed
        if (cashRadioButton.isSelected()) {
            cheqRadioButton.setSelected(false);
            cheqNoLable.setEnabled(false);
            cheqNotxt.setEnabled(false);
            cheqNotxt.setText("cash");
        }
    }//GEN-LAST:event_cashRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CustomerTxt;
    private javax.swing.JTable InvoiceViewTable;
    private javax.swing.JLabel amountCopytxt;
    private javax.swing.JTextField amountTxt;
    private javax.swing.JTextField balanceTxt;
    private javax.swing.JRadioButton cashRadioButton;
    private javax.swing.JLabel cheqNoLable;
    private javax.swing.JTextField cheqNotxt;
    private javax.swing.JRadioButton cheqRadioButton;
    private javax.swing.JTextField custIdtxt;
    private javax.swing.JComboBox<String> customerCombo;
    private com.toedter.calendar.JDateChooser dateChoser;
    private javax.swing.JTextField inoiceidTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel paidAmountCopytxt;
    private javax.swing.JTextField paidmountTxt;
    private javax.swing.JTable paymentTable;
    private javax.swing.JTextField paymentidTxt;
    private javax.swing.JTable resivedPTable;
    // End of variables declaration//GEN-END:variables

    private void LoadPaymentTable() {
//        paymentController = new PaymentController();
//        dtm = (DefaultTableModel) paymentTable.getModel();
//        dtm.getDataVector().removeAllElements();
//        List<Payment> payments = paymentController.getAllPayment();
//        for(Payment p : payments){
//            Object[] rowData={p.getId(),p.getInvoice_id(),p.getDate(),p.getAmount(), p.getPaidAmount(),p.getBalance(),p.getInvoice_id()};
//            dtm.addRow(rowData);
//            
//        }
    }

    private void loadCustomer() {
        customerCombo.removeAllItems();
        customerController = new CustomerController();
        List<Customer> list = customerController.getAllCustomer();
        if (list != null) {
            customerCombo.addItem("None");
            for (Customer customer : list) {
                customerCombo.addItem(customer.getName());
            }
        }
    }

    private void resivedPaymentTable() {
        resivedPaymentController = new ResivedPaymentController();
        dtm = (DefaultTableModel) resivedPTable.getModel();
        dtm.getDataVector().removeAllElements();
        List<ResivedPayment> resivedPayments = resivedPaymentController.getAllResived();
        for (ResivedPayment rp : resivedPayments) {
            Object[] rowData = {rp.getId(), rp.getCheqNo(), rp.getDate(), rp.getAmount(), rp.getCustomer().getId(), rp.getInvoice().getInvoice_id()};
            dtm.addRow(rowData);
        }
    }
}
