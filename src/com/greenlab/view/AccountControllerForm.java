/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.greenlab.view;

import com.greenlab.controller.CustomerController;
import com.greenlab.controller.InvoiceController;
import com.greenlab.controller.PaymentController;
import com.greenlab.controller.ResivedPaymentController;
import com.greenlab.model.Customer;
import com.greenlab.model.Debtor;
import com.greenlab.model.Invoice;
import com.greenlab.model.Payment;
import com.greenlab.model.ResivedPayment;
import java.io.InputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author zeonit
 */
public class AccountControllerForm extends javax.swing.JPanel {
    
    CustomerController customerController;
    PaymentController paymentController;
    DefaultTableModel dtm;
    InvoiceController invoiceController;
    PaymentController paymnentController;
    ResivedPaymentController resivedPaymentController;

    /**
     * Creates new form AccountanControllerForm
     */
    public AccountControllerForm() {
        initComponents();
        loadCustomers();
        AutoCompleteDecorator.decorate(customerCombo);
        loadCustomer1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        customerCombo1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cheqNotxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        setOffTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        totalTxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDebtors = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        customerCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Account Controller");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 300, 30));

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(723, 397));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        customerCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerCombo1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Customer Name :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Cheq No                :");

        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID", "Data", "Net Total", "Total", "Total Discount", "Customer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(invoiceTable);

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Invoice Set-Off");

        setOffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice Id", "Date", "Net Total", "Total", "Total Discount", "Customer id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(setOffTable);

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel10.setText("Invoice Set-Off");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Totall                    :");

        totalTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Pay Cheque");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Loard");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Payment ID", "Amount", "Balance", "Cheque No", "Date", "Invoice ID", "Paid Amount"
            }
        ));
        jScrollPane4.setViewportView(paymentTable);

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel12.setText("Invoice List");

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel13.setText("Payment List");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(338, 338, 338)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(totalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(jButton3)
                                        .addGap(80, 80, 80)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cheqNotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(customerCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cheqNotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3)
                                .addComponent(totalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Invoice Set-off", jPanel3);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Name    :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 50, -1));

        tableDebtors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice Id", "Date", "Total Amount", "Paid Amount", "Due Amount", "Reference"
            }
        ));
        jScrollPane1.setViewportView(tableDebtors);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 770, 320));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Individual Customer Debtors Report");
        jLabel6.setToolTipText("");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 240, 20));

        customerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerComboActionPerformed(evt);
            }
        });
        jPanel2.add(customerCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 230, 20));

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, -1, -1));

        jTabbedPane1.addTab("Individual Customer Debtors Report", jPanel2);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 1030, 520));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            ArrayList<Debtor> debitorlist=new ArrayList<>();
            String name=customerCombo.getSelectedItem().toString();
            for (int i = 0; i < tableDebtors.getRowCount(); i++) {

                String invoiceId=tableDebtors.getValueAt(i, 0).toString();
                String date=tableDebtors.getValueAt(i, 1).toString();
                String totalAmount=tableDebtors.getValueAt(i, 2).toString();
                String paidAmount=tableDebtors.getValueAt(i, 3).toString();
                String dueAmount=tableDebtors.getValueAt(i, 4).toString();
                String refference=tableDebtors.getValueAt(i, 5).toString();
                Debtor debtor=new Debtor(invoiceId, date, totalAmount, paidAmount, dueAmount, refference);
                debitorlist.add(debtor);
            }

            InputStream is=getClass().getResourceAsStream("debtorReport.jrxml");
            JasperReport jr=JasperCompileManager.compileReport(is);
            HashMap<String, Object> hm = new HashMap<String, Object>();
            JRBeanCollectionDataSource beanCollectionDataSource=new JRBeanCollectionDataSource(debitorlist);
            hm.put("parameter1", name);

            JasperPrint jp = JasperFillManager.fillReport(jr, hm, beanCollectionDataSource);
            JasperViewer.viewReport(jp,false);
        } catch (JRException ex) {
            Logger.getLogger(AccountControllerForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void customerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerComboActionPerformed
        customerController=new CustomerController();
        dtm=(DefaultTableModel) tableDebtors.getModel();
        String name=customerCombo.getSelectedItem().toString();
        Customer c=customerController.searchByName(name);
        dtm.getDataVector().removeAllElements();
        int customerId = 0;
        if(name!="All"){
            customerId=c.getId();
        }
        if(name=="All"){
            paymentController=new PaymentController();
            List<Payment> payments=paymentController.getAllPayment();
            for(Payment payment:payments){
                if(payment.getBalance()>0){
                    Object[] rowData={payment.getInvoice_id(),payment.getDate(),payment.getAmount(),payment.getPaidAmount(),payment.getBalance(),payment.getHeqNo()};
                    dtm.addRow(rowData);
                }
            }
        }else{
            invoiceController=new InvoiceController();
            List<Invoice> invoiceList=invoiceController.getAllInvoices();
            for(Invoice invoice:invoiceList){
                if(invoice.getCustomer().getId()==customerId){
                    paymentController=new PaymentController();
                    int invoiceId=invoice.getInvoice_id();
                    List<Payment> payments=paymentController.getAllPayment();
                    for(Payment payment:payments){

                        if(payment.getInvoice_id()==invoiceId){

                            if(payment.getBalance()>0){
                                Object[] rowData={payment.getInvoice_id(),payment.getDate(),payment.getAmount(),payment.getPaidAmount(),payment.getBalance(),payment.getHeqNo()};
                                dtm.addRow(rowData);
                            }

                        }

                    }

                }
            }

        }

    }//GEN-LAST:event_customerComboActionPerformed

    private void customerCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerCombo1ActionPerformed
        customerController = new CustomerController();
        invoiceController = new InvoiceController();

        String custName = customerCombo1.getSelectedItem().toString();
        Customer customer = customerController.getByName(custName);

        List<Invoice> invoices = invoiceController.searchByCustomerId(customer.getId());

        if(invoices !=null){
            dtm = (DefaultTableModel) invoiceTable.getModel();
            dtm.setRowCount(0);

            for(Invoice invoice : invoices){
                Object[] rowData ={invoice.getInvoice_id(),invoice.getDate(),invoice.getNetTotal(),invoice.getTotal(),invoice.getTotalDiscount(),invoice.getCustomer().getId()};
                dtm.addRow(rowData);

            }
        }

    }//GEN-LAST:event_customerCombo1ActionPerformed

    private void invoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMouseClicked
        paymnentController = new PaymentController();
        dtm = (DefaultTableModel) setOffTable.getModel();
        if(evt.getClickCount() ==2){
            int row = invoiceTable.getSelectedRow();
            String invId = invoiceTable.getValueAt(row, 0).toString();
            Date date = (Date) invoiceTable.getValueAt(row, 1);
            String netTotal = invoiceTable.getValueAt(row, 2).toString();
            String total = invoiceTable.getValueAt(row, 3).toString();
            String totalDiscount = invoiceTable.getValueAt(row, 4).toString();
            String customerid = invoiceTable.getValueAt(row, 5).toString();

            Object[]rowData ={invId,date,netTotal,total,totalDiscount,customerid};
            dtm.addRow(rowData);
        }

        if(evt.getClickCount()==1){
            int row = invoiceTable.getSelectedRow();
            Integer  invoiceId = Integer.parseInt(invoiceTable.getValueAt(row, 0).toString());

            List<Payment> payments = paymnentController.searchPaymentwithInvId(invoiceId);
            if(payments !=null){
                dtm = (DefaultTableModel) paymentTable.getModel();
                dtm.setRowCount(0);

                for(Payment payment :payments){
                    Object[] rowData = {payment.getId(),payment.getAmount(),payment.getBalance(),payment.getHeqNo(),payment.getDate(),payment.getInvoice_id(),payment.getPaidAmount()};
                    dtm.addRow(rowData);
                }
            }

        }

    }//GEN-LAST:event_invoiceTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        invoiceController = new InvoiceController();
        customerController = new CustomerController();
        resivedPaymentController = new ResivedPaymentController();

        dtm = (DefaultTableModel) setOffTable.getModel();
        int row = setOffTable.getRowCount();
        for(int i=0; i<row; i++){

            try {
                boolean isadd = false;
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd");
                String date = setOffTable.getValueAt(0, 1).toString();

                Date d = sdf.parse(date);

                Integer customerid =Integer.parseInt(setOffTable.getValueAt(i, 5).toString());
                Integer invoiceId = Integer.parseInt(setOffTable.getValueAt(i, 0).toString());
                Double paidAmount = Double.parseDouble(setOffTable.getValueAt(i, 2).toString());
                String cheqNo = cheqNotxt.getText();
                Double Balance = 0.0;

                Invoice invoice = invoiceController.searchInvoice(invoiceId);
                Customer customer = customerController.searchCustomer(customerid);

                ResivedPayment rp = new ResivedPayment(d, cheqNo, paidAmount, customer, invoice, Balance);
                isadd = resivedPaymentController.addResivedPayment(rp);

                JOptionPane.showMessageDialog(this, "Cheque"+i+"add");

            } catch (ParseException ex) {
                Logger.getLogger(AccountControllerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dtm = (DefaultTableModel) setOffTable.getModel();
        Double y=0.0;
        int row = setOffTable.getRowCount();
        for(int j=0; j<row; j++){
            Double x = Double.parseDouble(setOffTable.getValueAt(j, 2).toString());
            y = y+x;
        }
        String N =y.toString();
        totalTxt.setText(N);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cheqNotxt;
    private javax.swing.JComboBox<String> customerCombo;
    private javax.swing.JComboBox<String> customerCombo1;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable paymentTable;
    private javax.swing.JTable setOffTable;
    private javax.swing.JTable tableDebtors;
    private javax.swing.JTextField totalTxt;
    // End of variables declaration//GEN-END:variables
public void loadCustomers() {
        customerController=new CustomerController();
        List<Customer> customer=customerController.getAllCustomer();
        //chkProduct.setSelected(false);
        
        if(customer!=null){
            customerCombo.removeAllItems();
            customerCombo.addItem("All");
            for(Customer customer1:customer){
                customerCombo.addItem(customer1.getName());
            }
        }
    }

    private void loadCustomer1() {
         customerController = new CustomerController();
        List<Customer> list = customerController.getAllCustomer();
        if(list !=null){
           
            for(Customer customer :list){
                customerCombo1.addItem(customer.getName());
            }
            
        }
        
    }
   }

